// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique

  profile       Profile?
  links         Link[]
  configuration Configuration?

  @@map("users")
}

model Configuration {
  id         Int         @id @default(autoincrement())
  userId     Int         @unique
  darkText   Boolean?
  font       String?
  layoutId   Int?
  title      Title?
  background Background?
  button     Button?
  visuals    Visuals?

  user User @relation(fields: [userId], references: [id])

  @@map("configurations")
}

model Profile {
  id     Int     @id @default(autoincrement())
  userId Int     @unique
  bio    String?
  title  String?
  image  String?

  user User @relation(fields: [userId], references: [id])

  @@map("profiles")
}

model Link {
  id       Int     @id @default(autoincrement())
  userId   Int     @unique
  url      String
  hidden   Boolean
  archived Boolean
  title    String
  order    Int
  iconId   Int

  user User @relation(fields: [userId], references: [id])

  @@map("links")
}

model Background {
  id              Int     @id @default(autoincrement())
  userId          Int     @unique
  configurationId Int     @unique
  url             String?
  color           String?
  startColor      String?
  endColor        String?
  angle           Int?

  configuration Configuration @relation(fields: [configurationId], references: [id])

  @@map("backgrounds")
}

model Button {
  id                    Int     @id @default(autoincrement())
  userId                Int     @unique
  configurationId       Int     @unique
  opacity               Float
  blur                  Float
  color                 String
  textColor             String
  hideText              Boolean
  hideIcon              Boolean
  socialBackgroundColor Boolean
  socialIconColor       Boolean

  configuration Configuration @relation(fields: [configurationId], references: [id])

  @@map("buttons")
}

model Title {
  id              Int @id @default(autoincrement())
  userId          Int @unique
  configurationId Int @unique

  configuration Configuration @relation(fields: [configurationId], references: [id])

  @@map("titles")
}

enum TitleEffect {
  SPARKLES
  TYPEWRITER
  GLITCH
}

enum WeatherEffect {
  SNOW
  RAIN
  THUNDER
  LIGHTNING_BUGS
  FOG
}

model Visuals {
  id               Int            @id @default(autoincrement())
  userId           Int            @unique
  configurationId  Int            @unique
  titleEffect      TitleEffect?
  backgroundEffect WeatherEffect?

  configuration Configuration @relation(fields: [configurationId], references: [id])

  @@map("visuals")
}
